type Query {
  user(name: String!, studentID: String!, passwd: String!, groupNum: Int): User!
  syllabus:[Syllabus]
  announcement:[Announcement]
  grade(studentID:String!, subject:String!):[Grade]
  file:[File]
}
type User {
  name: String
  studentID: String
  passwd: String
  groupNum: Int
  login: Boolean!
  isTeacher:Boolean
}
type Syllabus{
  weekNum:String
  outline:String
  file:[File]
}
type File{
  type:String!
  info:String!
  fileName:String!
  fileLink:String!
}
type Announcement{
  time:String!
  title:String!
  content:String
}
type Grade{
  studentID:String!
  subject:String!
  itemName:String!
  score:Float!
  weight:Float
}
type Mutation {
  createUser(name: String!, studentID: String!, passwd: String!, groupNum: Int,isTeacher:Boolean): User!
  login(studentID: String!, passwd: String!): User!
  createSyllabus(weekNum:String!,outline:String):Syllabus!
  createFile(type:String!,info:String!,fileName:String!,fileLink:String!):File!
  createAnnouncement(time:String!, title:String!, content:String):Announcement!
  createGrade(studentID:String!, subject:String!, itemName:String!, score:Float!, weight:Float):Grade!
}
type Subscription {
  syllabus: Syllabus!
  announcement: Announcement!
  file: File!
  grade(studentID:String!, subject:String!): Grade! 
}